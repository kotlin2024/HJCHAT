#
#version: '3.8'
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 2181:2181
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - 9092:9092
#
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: hjchat-server
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    ports:
#      - 443:443


#version: '3.8'
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 2181:2181
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - 9092:9092
#
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: hjchat-server
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    ports:
#      - 8080:8080  # Spring Boot 포트 추가
#      - 443:443    # 기존 HTTPS 포트 유지

#version: '3.8'
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 2181:2181
#    deploy:
#      resources:
#        limits:
#          memory: 512M    # 최대 메모리 사용량 (512MB)
#          cpus: "0.5"      # CPU 사용량 50% 제한
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - 9092:9092
#    deploy:
#      resources:
#        limits:
#          memory: 1G      # 최대 메모리 사용량 (1GB)
#          cpus: "1.0"      # CPU 사용량 100% 제한
#
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: hjchat-server
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    ports:
#      - 8080:8080  # Spring Boot 포트 추가
#      - 443:443    # 기존 HTTPS 포트 유지
#    deploy:
#      resources:
#        limits:
#          memory: 1G      # 최대 메모리 사용량 (1GB)
#          cpus: "1.5"      # CPU 사용량 150% 제한
#
#version: '3.8'
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 2181:2181
#    deploy:
#      resources:
#        limits:
#          cpus: "0.5"  # 최대 0.5 CPU 사용
#          memory: "512M"  # 최대 512MB RAM 사용
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - 9092:9092
#    deploy:
#      resources:
#        limits:
#          cpus: "0.5"
#          memory: "512M"
#
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: hjchat-server
#    depends_on:
#      - kafka
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    ports:
#      - 8080:8080
#    deploy:
#      resources:
#        limits:
#          cpus: "0.5"
#          memory: "512M"

version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - 9092:9092
  kafka:
    image: bitnami/kafka:latest  # ✅ Kafka 이미지를 bitnami로 변경
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_CFG_BROKER_ID: 1  # ✅ 환경 변수 프리픽스 변경 (KAFKA_ → KAFKA_CFG_)
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181  # ✅ 기존 설정 유지
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092  # ✅ 변경된 프리픽스 적용
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092  # ✅ 변경된 프리픽스 적용
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # ✅ 변경된 프리픽스 적용
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hjchat-server
    depends_on:
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8081
      SERVER_HOST: api.hj-chat.com
    ports:
      - 8081:8081
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

networks:
  default:
    name: hjchat-network
